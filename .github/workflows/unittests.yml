# Add your GitHub Actions workflow here
# Example: CI/CD pipeline, automated testing, etc.
# ==============================================================================
# 10 Academy - Credit Risk Modeling - Week 5
# Task 6: Continuous Integration Workflow (ci.yml)
#
# This GitHub Actions workflow automates testing and code style checks.
# ==============================================================================

name: CI - Build and Test

# --- Trigger ---
# This workflow runs on every push to the 'main' branch.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# --- Jobs ---
# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  build-and-test:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Step 4: Lint with flake8
      # This step checks for code style issues.
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Step 5: Test with pytest
      # This step runs all the unit tests in the 'tests' directory.
      - name: Test with pytest
        run: |
          pytest
